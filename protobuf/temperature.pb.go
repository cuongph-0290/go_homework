// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/temperature.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	protobuf/temperature.proto

It has these top-level messages:
	City
	Temperature
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type City struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *City) Reset()                    { *m = City{} }
func (m *City) String() string            { return proto.CompactTextString(m) }
func (*City) ProtoMessage()               {}
func (*City) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *City) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Temperature struct {
	TemmpInfos []*Temperature_TempInfo `protobuf:"bytes,4,rep,name=temmpInfos" json:"temmpInfos,omitempty"`
}

func (m *Temperature) Reset()                    { *m = Temperature{} }
func (m *Temperature) String() string            { return proto.CompactTextString(m) }
func (*Temperature) ProtoMessage()               {}
func (*Temperature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Temperature) GetTemmpInfos() []*Temperature_TempInfo {
	if m != nil {
		return m.TemmpInfos
	}
	return nil
}

type Temperature_TempRange struct {
	Max int32 `protobuf:"varint,1,opt,name=Max,json=max" json:"Max,omitempty"`
	Min int32 `protobuf:"varint,2,opt,name=Min,json=min" json:"Min,omitempty"`
}

func (m *Temperature_TempRange) Reset()                    { *m = Temperature_TempRange{} }
func (m *Temperature_TempRange) String() string            { return proto.CompactTextString(m) }
func (*Temperature_TempRange) ProtoMessage()               {}
func (*Temperature_TempRange) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Temperature_TempRange) GetMax() int32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *Temperature_TempRange) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

type Temperature_TempInfo struct {
	Day      string                 `protobuf:"bytes,3,opt,name=Day,json=day" json:"Day,omitempty"`
	TempRang *Temperature_TempRange `protobuf:"bytes,4,opt,name=tempRang" json:"tempRang,omitempty"`
}

func (m *Temperature_TempInfo) Reset()                    { *m = Temperature_TempInfo{} }
func (m *Temperature_TempInfo) String() string            { return proto.CompactTextString(m) }
func (*Temperature_TempInfo) ProtoMessage()               {}
func (*Temperature_TempInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 1} }

func (m *Temperature_TempInfo) GetDay() string {
	if m != nil {
		return m.Day
	}
	return ""
}

func (m *Temperature_TempInfo) GetTempRang() *Temperature_TempRange {
	if m != nil {
		return m.TempRang
	}
	return nil
}

func init() {
	proto.RegisterType((*City)(nil), "temperature.City")
	proto.RegisterType((*Temperature)(nil), "temperature.Temperature")
	proto.RegisterType((*Temperature_TempRange)(nil), "temperature.Temperature.TempRange")
	proto.RegisterType((*Temperature_TempInfo)(nil), "temperature.Temperature.TempInfo")
}

func init() { proto.RegisterFile("protobuf/temperature.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xad, 0xa9, 0xba, 0x3b, 0x15, 0xd1, 0x9c, 0x42, 0x4e, 0x35, 0xa7, 0x9e, 0x5a, 0xa8,
	0x77, 0xc5, 0x3f, 0xb0, 0x28, 0x78, 0x09, 0x7b, 0x12, 0x2f, 0x59, 0x9c, 0x95, 0x1e, 0x92, 0x96,
	0x38, 0x0b, 0xdb, 0x4f, 0xeb, 0x57, 0x91, 0x84, 0xad, 0x46, 0xc1, 0xbd, 0x3d, 0x7e, 0x99, 0x79,
	0x6f, 0xf2, 0x40, 0x0e, 0xbe, 0xa7, 0x7e, 0xb5, 0x59, 0x37, 0x84, 0x76, 0x40, 0x6f, 0x68, 0xe3,
	0xb1, 0x8e, 0x90, 0x17, 0x09, 0x52, 0x12, 0xf2, 0xfb, 0x8e, 0x46, 0xce, 0x21, 0x77, 0xc6, 0xa2,
	0xc8, 0xca, 0xac, 0x9a, 0xeb, 0xa8, 0xd5, 0x67, 0x06, 0xc5, 0xf2, 0x67, 0x96, 0xdf, 0x02, 0x10,
	0x5a, 0x3b, 0x3c, 0xba, 0x75, 0xff, 0x21, 0xf2, 0x92, 0x55, 0x45, 0x7b, 0x59, 0xa7, 0x01, 0xcb,
	0x3f, 0x3a, 0x4c, 0xea, 0x64, 0x49, 0x36, 0x30, 0x0f, 0x5c, 0x1b, 0xf7, 0x8e, 0xfc, 0x1c, 0xd8,
	0xb3, 0xd9, 0xc6, 0xc8, 0x23, 0xcd, 0xac, 0xd9, 0x46, 0xd2, 0x39, 0x71, 0xb8, 0x23, 0x9d, 0x93,
	0xaf, 0x30, 0x9b, 0x8c, 0xc2, 0xeb, 0x83, 0x19, 0x05, 0x8b, 0x27, 0xb2, 0x37, 0x33, 0xf2, 0x6b,
	0x98, 0xd1, 0xce, 0x4e, 0xe4, 0x65, 0x56, 0x15, 0xad, 0xda, 0x7b, 0x4f, 0xcc, 0xd5, 0xdf, 0x3b,
	0xed, 0x13, 0x9c, 0x2c, 0x3c, 0x22, 0xa1, 0xe7, 0x37, 0x70, 0xb6, 0x40, 0x4a, 0xbf, 0x7b, 0xf1,
	0xcb, 0x2a, 0xb4, 0x24, 0xc5, 0x7f, 0xee, 0xea, 0xe0, 0xee, 0xf4, 0x05, 0xea, 0x66, 0xaa, 0x7d,
	0x75, 0x1c, 0xd5, 0xd5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x09, 0xee, 0x33, 0x71, 0x89, 0x01,
	0x00, 0x00,
}
